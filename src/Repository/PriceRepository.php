<?php

namespace App\Repository;

use App\Entity\Price;
use App\Entity\Product;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * PriceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PriceRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, Price::class);
    }

	public function findMaxPriceJoinedToProduct($idProduct)
	{
	    try {
	    	$listPrices = $this->findOrderedPricesJoinedToProduct($idProduct);
	    	
	        if ($listPrices !== null && count($listPrices) > 0) {
	        	return $listPrices[0];
	        } else {
	        	return null;
	        }
	    } catch (\Doctrine\ORM\NoResultException $e) {
	        return null;
	    }
	}

	public function findOrderedPricesJoinedToProduct($idProduct) {
        return $this->createQueryBuilder('price')
            ->join(Product::class, 'product', 'WITH', 'product.id = price.product')
            ->andWhere('product.id = :productId')
            ->setParameter('productId', $idProduct)
            ->getQuery()
            ->getResult();
	}

    public function remove(Price $entity, bool $flush = false): void
    {
        $this->getEntityManager()->remove($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }
}
